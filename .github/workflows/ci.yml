name: CloudGate CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Authorize Docker
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Verify GCP Authentication
        run: |
          echo "📋 Current GCP Project:"
          gcloud config get-value project
          echo "📋 Current GCP Account:"
          gcloud config get-value account

      # Frontend Pre-checks
      - name: 🔍 Frontend Pre-deployment Checks
        run: |
          echo "🔍 Running frontend pre-deployment checks..."
          cd frontend
          echo "📦 Installing dependencies..."
          npm ci
          echo "🔍 Running TypeScript check..."
          npm run typecheck
          echo "✅ Frontend checks passed!"

      # Backend Pre-checks
      - name: 🔍 Backend Pre-deployment Checks
        run: |
          echo "🔍 Running backend pre-deployment checks..."
          cd backend
          echo "📦 Verifying Go modules..."
          go mod verify
          echo "🔍 Running Go vet..."
          go vet ./...
          echo "🔧 Running Go fmt..."
          go fmt ./...
          echo "🏗️ Running Go build..."
          go build ./...
          echo "✅ Backend checks passed!"

      # Deploy Backend
      - name: 🚀 Deploy Backend to Cloud Run
        run: |
          echo "🚀 Starting backend deployment..."
          echo "📍 Deploying to: us-central1"
          echo "🏷️ Service: cloudgate-backend"

          gcloud run deploy cloudgate-backend \
            --source ./backend \
            --region us-central1 \
            --allow-unauthenticated \
            --memory=1Gi \
            --cpu=1 \
            --max-instances=10 \
            --timeout=300 \
            --set-env-vars="NEON_DATABASE_URL=${{ secrets.NEON_DATABASE_URL }},KEYCLOAK_URL=${{ secrets.KEYCLOAK_URL }},KEYCLOAK_REALM=${{ secrets.KEYCLOAK_REALM }},KEYCLOAK_CLIENT_ID=${{ secrets.KEYCLOAK_CLIENT_ID }},ALLOWED_ORIGINS=${{ secrets.ALLOWED_ORIGINS }},GIN_MODE=release" \
            --execution-environment=gen2 \
            --verbosity=debug

          echo "✅ Backend deployment completed!"

      - name: 🔍 Verify Backend Deployment
        run: |
          echo "🔍 Verifying backend deployment..."
          BACKEND_URL=$(gcloud run services describe cloudgate-backend --region=us-central1 --format='value(status.url)')
          echo "🌐 Backend URL: $BACKEND_URL"

          echo "🏥 Checking backend health..."
          curl -f "$BACKEND_URL/health" || echo "⚠️ Health check failed, but deployment may still be successful"

      # Deploy Frontend
      - name: 🚀 Deploy Frontend to Cloud Run
        run: |
          echo "🚀 Starting frontend deployment..."
          echo "📍 Deploying to: us-central1"
          echo "🏷️ Service: cloudgate-frontend"

          gcloud run deploy cloudgate-frontend \
            --source ./frontend \
            --region us-central1 \
            --allow-unauthenticated \
            --memory=1Gi \
            --cpu=1 \
            --max-instances=10 \
            --timeout=300 \
            --execution-environment=gen2 \
            --verbosity=debug

          echo "✅ Frontend deployment completed!"

      - name: 🔍 Verify Frontend Deployment
        run: |
          echo "🔍 Verifying frontend deployment..."
          FRONTEND_URL=$(gcloud run services describe cloudgate-frontend --region=us-central1 --format='value(status.url)')
          echo "🌐 Frontend URL: $FRONTEND_URL"

      - name: 📋 Deployment Summary
        run: |
          echo "🎉 Deployment Summary:"
          echo "===================="

          BACKEND_URL=$(gcloud run services describe cloudgate-backend --region=us-central1 --format='value(status.url)' 2>/dev/null || echo "❌ Backend deployment failed")
          FRONTEND_URL=$(gcloud run services describe cloudgate-frontend --region=us-central1 --format='value(status.url)' 2>/dev/null || echo "❌ Frontend deployment failed")

          echo "🖥️  Backend:  $BACKEND_URL"
          echo "🌐 Frontend: $FRONTEND_URL"
          echo "===================="

      # Error Handling - Get Build Logs on Failure
      - name: 📋 Get Build Logs on Failure
        if: failure()
        run: |
          echo "❌ Deployment failed! Getting recent build logs..."
          echo "📋 Recent builds:"
          gcloud builds list --limit=3 --region=us-central1 --format="table(id,status,createTime)"

          echo "📋 Getting logs for the most recent failed build..."
          FAILED_BUILD=$(gcloud builds list --limit=1 --filter="status=FAILURE" --region=us-central1 --format="value(id)")
          if [ -n "$FAILED_BUILD" ]; then
            echo "🔍 Build ID: $FAILED_BUILD"
            echo "📋 Build logs:"
            gcloud builds log "$FAILED_BUILD" --region=us-central1
          else
            echo "⚠️ No recent failed builds found"
          fi
